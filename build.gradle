buildscript {
    repositories {
        mavenCentral()

        maven { url "http://files.minecraftforge.net/maven" }
        maven { url "https://repo.spongepowered.org/repository/maven-public/" }
        maven { url "https://jitpack.io" }
    }

    dependencies {
        classpath "com.github.Debuggingss:ForgeGradle:1d22621a6b"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.10"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()

    maven { url "https://repo.essential.gg/repository/maven-public" }
    maven { url 'https://jitpack.io' }
}

version = "1.0.0"
group="cum.jesus.manykeybinds"
archivesBaseName = "ManyKeyBinds"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9-11.15.1.1722"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = true
}

dependencies {
    implementation 'org.jetbrains:annotations:15.0'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

configurations {
    mods
    shade
    compile.extendsFrom shade
}

apply plugin: "idea"

idea {
    module {
        inheritOutputDirs = true
    }
}

def constants = [
        "%VERSION%": version.toString()
]

task preprocessSources(type: Copy) {
    from "src/main/java"
    into "$buildDir/preprocessedSources"

    filter { line ->
        def newLine = (String) line

        constants.each { key, value ->
            newLine = newLine.replaceAll(key, value)
        }

        return newLine
    }
}

task deletePreprocessedSources(type: Delete) {
    delete "$buildDir/preprocessedSources"
}

compileJava {
    source = fileTree("$buildDir/preprocessedSources")
    dependsOn deletePreprocessedSources, preprocessSources
}